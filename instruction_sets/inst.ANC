Binary AND, and Set Carry (unintended instruction)
A $\leftarrow$ A \binand{} M, C $\leftarrow$ A(7)
N+Z+
This instruction performs a binary AND operation of the argument with the
accumulator, and stores the result in the accumulator. Only bits that were
already set in the accumulator, and that are set in the argument will be set
in the accumulator on completion.  Unlike the AND instruction, the Carry Flag
is set as though the result were shifted left one bit. That is, the Carry Flag
is set in the same way as the Negative Flag.

\subsubsection*{Side effects}
\begin{itemize}
\item The N flag will be set if the result is negative, i.e. has it's most significant bit set, otherwise it will be cleared.
\item The C flag will be set if the result is negative, i.e. has it's most significant bit set, otherwise it will be cleared.
\item The Z flag will be set if the result is zero, otherwise it will be cleared.
\end{itemize}
